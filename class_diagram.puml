@startuml
'https://plantuml.com/class-diagram

interface AbstractModel
interface ICrud
abstract class AbstractTable

AbstractModel <|.. User
AbstractModel <|.. Role
AbstractModel <|.. Account

ICrud <|.. AbstractTable
AbstractTable <|-- TableRoles
AbstractTable <|-- TableUsers
AbstractTable <|-- TableAccounts

AbstractModel <.. ICrud
AbstractModel <.. AbstractTable

Role <.. TableRoles
User <.. TableUsers
Account <.. TableAccounts

ICrud *-- RoleServices
Role <.. RoleServices

abstract class AbstractModel {
    {field} +Id {get; set;} : int
}

class User {
    {field} +FirstName {get; set;} : string
    {field} +LastName {get; set;} : string
    {field} +Email {get; set;} : string
    {field} +Tel {get; set;} : string
}

class Role {
    {field} +Name { get; set; } : string
}

class Account
{
    {field} +Login { get; set; } : string
    {field} +Password { get; set; } : string
    {field} +IsDelete { get; set; } : bool
    {field} +RoleId { get; set; } : int
}

interface ICrud<T>
{
    {method} +Insert(model : T) : void
    {method} +GetAll() : IEnumerable<T>
    {method} +GetById(id : int) : T
    {method} +void Update(model : T) : void
    {method} +void Delete(id : int) : void
}

abstract class AbstractTable<T>
{
    {field} #Db : MySqlConnection readonly
    {field} #SqlCommand : MySqlCommand readonly
    
    {method} #AbstractTable()
    
    {method} +Insert(model : T) : void
    {method} +GetAll() : IEnumerable<T>
    {method} +GetById(id : int) : T
    {method} +void Update(model : T) : void
    {method} +void Delete(id : int) : void
}

class TableRoles {
    {method} +Insert(model : Role) : void
    {method} +GetAll() : IEnumerable<Role>
    {method} +GetById(id : int) : Role
    {method} +void Update(model : Role) : void
    {method} +void Delete(id : int) : void
}

class TableUsers {
    {method} +Insert(model : User) : void
    {method} +GetAll() : IEnumerable<User>
    {method} +GetById(id : int) : User
    {method} +void Update(model : User) : void
    {method} +void Delete(id : int) : void
}

class TableAccounts {
    {method} +Insert(model : Account) : void
    {method} +GetAll() : IEnumerable<Account>
    {method} +GetById(id : int) : Account
    {method} +void Update(model : Account) : void
    {method} +void Delete(id : int) : void
}

class RoleServices {
    {field} -_crud : ICrud<Role> readonly
    
    {method} #RoleServices(crud : ICrud<Role>)
    
    {method} +Insert(model : Role) : void
    {method} +GetAll() : IEnumerable<Role>
    {method} +GetById(id : int) : Role
    {method} +void Update(model : Role) : void
    {method} +void Delete(id : int) : void
}

@enduml